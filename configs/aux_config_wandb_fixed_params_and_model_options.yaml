# ════════════════════════════════════════════════════════════════
# Fixed Parameters: Dataset, Architecture, and Runtime Settings
# ════════════════════════════════════════════════════════════════
global:
  N_threads: 8

data:
  root_path: /home/dlopez/Documents/Projects/JPAS_Domain_Adaptation/DATA/noise_jpas_v1/Train-Validate-Test

  load_JPAS_data:
    - name: all
      npy: JPAS_DATA_Aper_Cor_3_FLUX+NOISE.npy
      csv: JPAS_DATA_PROPERTIES.csv
      sample_percentage: 1.0

  load_DESI_data:
    - name: train
      npy: mock_3_train.npy
      csv: props_training.csv
      sample_percentage: 1.0
    - name: val
      npy: mock_3_validate.npy
      csv: props_validate.csv
      sample_percentage: 1.0
    - name: test
      npy: mock_3_test.npy
      csv: props_test.csv
      sample_percentage: 1.0

  random_seed_load: 0
  apply_masks: [unreliable, magic_numbers, negative_errors, nan_values, apply_additional_filters]
  mask_indices: [0, -2]
  magic_numbers: [-99, 99]
  i_band_sn_threshold: 0.0
  z_lim_QSO_cut: 2.2

  train_ratio_both: 0.7
  val_ratio_both: 0.15
  test_ratio_both: 0.15
  random_seed_split_both: 0

  train_ratio_only_DESI: 0.7
  val_ratio_only_DESI: 0.15
  test_ratio_only_DESI: 0.15
  random_seed_split_only_DESI: 0

  keys_xx: [OBS, ERR, MORPHTYPE_int]
  keys_yy: [SPECTYPE_int, TARGETID]
  normalize: true
  key_survey_training: DESI_combined

models:
  path_load: null

training:
  path_save: /home/dlopez/Documents/Projects/JPAS_Domain_Adaptation/SAVED_models/10_wandb_example
  sampling_strategy: true_random
  freeze_downstream_model: false
  seed_mode: deterministic
  seed: 0
  device: cuda
  batch_size_val: null

# ════════════════════════════════════════════════════════════════
# Model Options
# ════════════════════════════════════════════════════════════════

encoders:
  # Minimal capacity
  - hidden_layers: [64]
    dropout_rates: [0.0]

  # Slightly larger single-layer
  - hidden_layers: [128]
    dropout_rates: [0.1]

  # Two moderate layers
  - hidden_layers: [256, 128]
    dropout_rates: [0.1, 0.1]

  # Three-layer encoder with light dropout
  - hidden_layers: [256, 128, 64]
    dropout_rates: [0.1, 0.1, 0.1]

  # Narrow deep encoder, compressive
  - hidden_layers: [128, 64, 32, 16]
    dropout_rates: [0.0, 0.1, 0.2, 0.3]

  # Moderate width, 3-layer
  - hidden_layers: [256, 128, 64]
    dropout_rates: [0.1, 0.2, 0.2]

  # Uniform medium-depth encoder
  - hidden_layers: [128, 128, 128]
    dropout_rates: [0.1, 0.1, 0.1]

  # Deeper, consistent dropout, moderate width
  - hidden_layers: [128, 64, 64, 32]
    dropout_rates: [0.1, 0.1, 0.1, 0.1]

  # Same-width 4-layer encoder
  - hidden_layers: [64, 64, 64, 64]
    dropout_rates: [0.1, 0.1, 0.1, 0.1]

  # Compressing 5-layer encoder
  - hidden_layers: [256, 128, 64, 32, 16]
    dropout_rates: [0.2, 0.2, 0.2, 0.2, 0.2]

  # Middle-range capacity with alternating dropout
  - hidden_layers: [512, 128, 32]
    dropout_rates: [0.2, 0.1, 0.0]

  # Shallow wide encoder with regularization
  - hidden_layers: [512, 128]
    dropout_rates: [0.3, 0.3]


downstreams:
  # Minimal head
  - hidden_layers: [32]
    dropout_rates: [0.0]

  # Small 1-layer
  - hidden_layers: [64]
    dropout_rates: [0.1]

  # Two-layer compact head
  - hidden_layers: [128, 64]
    dropout_rates: [0.1, 0.1]

  # Two equal layers
  - hidden_layers: [128, 128]
    dropout_rates: [0.0, 0.0]

  # Three-layer narrow head
  - hidden_layers: [64, 32, 16]
    dropout_rates: [0.0, 0.1, 0.2]

  # Medium 3-layer with uniform dropout
  - hidden_layers: [128, 64, 32]
    dropout_rates: [0.1, 0.1, 0.1]

  # Narrow consistent dropout
  - hidden_layers: [64, 64]
    dropout_rates: [0.2, 0.2]

  # Mildly regularized decreasing width
  - hidden_layers: [128, 64, 32]
    dropout_rates: [0.3, 0.2, 0.1]

  # Compact deep
  - hidden_layers: [64, 64, 64, 64]
    dropout_rates: [0.1, 0.1, 0.1, 0.1]

  # Classic deep compression head
  - hidden_layers: [256, 128, 64, 32]
    dropout_rates: [0.2, 0.2, 0.2, 0.2]

  # Light deep head
  - hidden_layers: [128, 64, 32, 16]
    dropout_rates: [0.1, 0.1, 0.1, 0.1]

  # Test variant with mixed dropout
  - hidden_layers: [256, 64, 128]
    dropout_rates: [0.1, 0.3, 0.2]
